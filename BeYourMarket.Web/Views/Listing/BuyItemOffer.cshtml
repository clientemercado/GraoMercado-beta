@using Microsoft.Practices.Unity;
@using Microsoft.Practices.Unity.Configuration;
@using Microsoft.AspNet.Identity

@model BeYourMarket.Web.Models.ListingItemModel

@{
    ViewBag.Title = Model.ListingCurrent.Title;
}

@section Styles {
    <link href="~/css/formstone/lightbox.css" rel="stylesheet" />
    <link href="~/js/timepicker/bootstrap-datepicker.min.css" rel="stylesheet" />
}

<div class="container-fluid body-content" style="margin-top:20px; margin-bottom:20px;">

    <div class="main-section">

        @Html.Partial("_ListingContactModal", Model)

        <div class="row">
            <div class="container-fluid">
                <div class="row">
                    @Html.Partial("_UserMessage")

                    <div class="col-md-8 col-xs-12">
                        <div class="section panel-header">
                            <div class="panel-body bdr-b panel-header">
                                <p class="text-lighten">
                                    @CacheHelper.Settings.SignupText
                                </p>
                                @if (Model.TpAcess == 1)
                                {
                                    <a href="@Url.Action("Index", "Home")"> <h4>[[[Início]]]</h4></a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Dashboard", "Manage")"> [[[Início]]]</a>
                                }
                                <input type="hidden" id="inIdOf" name="inIdOf" value="@ViewBag.idOferta" />
                                <input type="hidden" id="inTC" name="inTC" value="@Model.temDialogo" />
                            </div>
                            <div class="col-md-12">
                                <h3>
                                    @Model.ListingCurrent.Title
                                    <span class="score @Model.ListingCurrent.RatingClass text-md"></span>
                                    <!-- Show edit button if administrator or the user who create the listing -->
                                    @if (Model.ListingCurrent.UserID == User.Identity.GetUserId() || User.IsInRole("Administrator"))
                                    {
                                        <a class="btn btn-primary" href="@Url.Action("ListingUpdate", "Listing", new { id = Model.ListingCurrent.ID, area = "" })"><i class="fa fa-edit"></i> [[[Alterar]]]</a>
                                        <input type="hidden" id="inToEd" value="ad" />
                                    }
                                    else
                                    {
                                        @*<a class="btn btn-success" href="@Url.Action("BuyInAction", "Listing", new { id = Model.ListingCurrent.ID, area = "" })"> [[[COMPRAR AGORA]]]</a>*@
                                        <a class="btn btn-success compra" href="#inQuantCompra"> [[[COMPRAR AGORA]]]</a>
                                        <input type="hidden" id ="inToEd" value="noad" />
                                    }
                                </h3>

                                <h4>
                                    @Html.DisplayFor(x => x.ListingCurrent.ValorTotalPorAnimalSale)  por unidade
                                </h4>
                                <p class="lead text-lighten">
                                    @Model.ListingCurrent.Location
                                </p>
                            </div>

                        </div>

                        <div class="panel-header bdr-b container-fluid">
                            <ul class="nav nav-tabs" role="tablist" id="mainTab">
                                <li role="presentation" class="active"><a href="#description" aria-controls="description" role="tab" data-toggle="tab"><i class="fa fa-info"></i>[[[Descrição]]]</a></li>
                                @if (Model.ListingCurrent.Latitude.HasValue && Model.ListingCurrent.Longitude.HasValue)
                                {
                                    <li role="presentation"><a href="#map-canvas"><i class="fa fa-map-marker"></i>[[[Maps]]]</a></li>
                                }

                                <li role="presentation">
                                    <a href="#reviewList"><i class="fa fa-star"></i>[[[avaliações]]]</a>
                                </li>

                                @*<li role="presentation">
                                    <a id="contactModal" data-toggle="modal" data-target="#contactModal"><i class="fa fa-envelope"></i>[[[Contato]]]</a>
                                </li>*@
                            </ul>
                        </div>

                        <div class="tab-content">
                            <div role="tabpanel" class="tab-pane fade active in" id="description">
                                <div class="panel panel-default bdr-t-none">
                                    <div class="panel-body">
                                        <p>
                                            @Model.ListingCurrent.Description
                                        </p>
                                    </div>

                                    <!---Pictures-->
                                    <div class="panel-heading bdr-t">
                                        <i class="fa fa-picture-o"></i> [[[Fotos / Vídeos]]]
                                    </div>
                                    <div class="panel-body">
                                        @if (Model.Pictures.Count > 0)
                                        {
                                            <div id="carousel-gallery" class="carousel slide" data-ride="carousel">
                                                <ol class="carousel-indicators">
                                                    @for (int i = 0; i < Model.Pictures.Count; i++)
                                                    {
                                                        <li data-target="#carousel-gallery" data-slide-to="@i"></li>
                                                    }
                                                </ol>

                                                <div class="carousel-inner" role="listbox">
                                                    @for (int i = 0; i < Model.Pictures.Count; i++)
                                                    {
                                                        <div class="item @(i == 0 ? "active" : "")">
                                                            <img style=" margin-left: auto; margin-right: auto;" alt="" src="@Model.Pictures[i].Url" data-holder-rendered="true">
                                                        </div>
                                                    }
                                                </div>

                                                <a class="left carousel-control" href="#carousel-gallery" role="button" data-slide="prev">
                                                    <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                                                    <span class="sr-only">[[[Previous]]]</span>
                                                </a>
                                                <a class="right carousel-control" href="#carousel-gallery" role="button" data-slide="next">
                                                    <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                                                    <span class="sr-only">[[[Next]]]</span>
                                                </a>

                                            </div>

                                            <div class="panel-body">
                                                <div class="row">
                                                    @foreach (var thumbnail in Model.Pictures)
                                                    {
                                                        <div class="col-xs-6 col-md-2">
                                                            <a href="@thumbnail.Url" class="boxer" title="" data-gallery="gallery" data-lightbox-gallery="photo_gallery">
                                                                <img alt="Thumbnail" src="@thumbnail.Url" style=" width: 100%; display: block;">
                                                            </a>
                                                        </div>
                                                    }
                                                </div>

                                            </div>
                                        }
                                        else
                                        {
                                            <img style="width: 100%" src="@BeYourMarket.Web.Utilities.ImageHelper.GetListingImagePath(0)" />
                                        }
                                    </div>
                                    <!---Pictures-->

                                    <table class="table">
                                        <tbody>
                                            <tr>
                                                <td>
                                                    <h4>[[[Categoria]]]</h4>
                                                </td>
                                                <td>
                                                    <a href="@Url.Action("Search", "Home", new { categoryId = Model.ListingCurrent.CategoryID, oqeq = @ViewBag.oqeq })"><h4>@Model.ListingCurrent.Category.Name</h4></a>
                                                </td>
                                            </tr>
                                            @if (Model.ListingCurrent.CategoryID == 6)
                                            {
                                                <tr>
                                                    <td>
                                                        <h4>[[[Tipo]]]</h4>
                                                    </td>
                                                    <td>
                                                        <h4>@Html.DisplayFor(x => Model.descricaoTipoAnimal)</h4>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <h4>[[[Raça]]]</h4>
                                                    </td>
                                                    <td>
                                                        <h4>@Html.DisplayFor(x => Model.descricaoracaAnimal)</h4>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <h4>[[[Idade]]]</h4>
                                                    </td>
                                                    <td>
                                                        <h4>@Html.DisplayFor(x => Model.ListingCurrent.IdadeAnimais)</h4>
                                                    </td>
                                                </tr>
                                                <tr bgcolor="#DCDCDC">
                                                    <td>
                                                        [[[Peso por animal (em Kg)]]]
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => Model.ListingCurrent.PesoKgPorItemSale)
                                                    </td>
                                                </tr>
                                                <tr bgcolor="#DCDCDC">
                                                    <td>
                                                        [[[Peso por animal (em arrobas)]]]
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => Model.ListingCurrent.PesoArrobaPorItemSale)
                                                    </td>
                                                </tr>
                                                <tr bgcolor="#DCDCDC">
                                                    <td>
                                                        [[[Peso Total do Lote (em Kg)]]]
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => Model.ListingCurrent.PesoTotalLoteKgSale)
                                                    </td>
                                                </tr>
                                                <tr bgcolor="#DCDCDC">
                                                    <td>
                                                        [[[Peso Total do Lote (em arrobas)]]]
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => Model.ListingCurrent.PesoTotalLoteArrobaSale)
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <h4>[[[Preço do Lote]]]</h4>
                                                    </td>
                                                    <td>
                                                        @*<h4>@Html.DisplayFor(x => Model.ListingCurrent.ValorTotalDoLoteSale)</h4>*@
                                                        <h4>@Html.DisplayFor(x => Model.totalOfertaMaisComissao)</h4> 
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <h4>[[[Preço por animal]]]</h4>
                                                    </td>
                                                    <td>
                                                        <h4>@Html.DisplayFor(x => Model.ListingCurrent.ValorTotalPorAnimalSale)</h4>
                                                    </td>
                                                </tr>
                                                <tr bgcolor="#DCDCDC">
                                                    <td>
                                                        [[[Preço por Kg]]]
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => Model.ListingCurrent.ValorTotalPorKgSale)
                                                    </td>
                                                </tr>
                                                <tr bgcolor="#DCDCDC">
                                                    <td>
                                                        [[[Preço por Arroba]]]
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => Model.ListingCurrent.ValorTotalPorArrobaSale)
                                                    </td>
                                                </tr>
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td>
                                                        <h4>[[[Quantidade Disponível]]]</h4>
                                                    </td>
                                                    <td>
                                                        <h4>@Html.DisplayFor(x => Model.ListingCurrent.QuantidadeItemSale)</h4>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <h4>[[[Preço do Lote]]]</h4>
                                                    </td>
                                                    <td>
                                                        <h4>@Html.DisplayFor(x => Model.totalOfertaMaisComissao)</h4>
                                                    </td>
                                                </tr>
                                            }
                                            <tr>
                                                <td>
                                                    <h4>[[[Frete]]]</h4>
                                                </td>
                                                <td>
                                                    <h4>@Html.DisplayFor(x => Model.freteOferta)</h4>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <h4>[[[Quantidade Disponível]]]</h4>
                                                </td>
                                                <td>
                                                    <h4><font color="green">@Html.DisplayFor(x => Model.ListingCurrent.QuantidadeItemSale)</font></h4>
                                                    <input type="hidden" id="inQD" value="@Model.ListingCurrent.QuantidadeItemSale" />
                                                </td>
                                            </tr>
                                            <tr bgcolor="#DCDCDC">
                                                <td>
                                                    <h4>[[[Quantidade Compra]]]</h4>
                                                </td>
                                                <td>
                                                    <input type="text" class="form-control input-lg valor" id="inQuantCompra" name="inQuantCompra" placeholder="[[[0,00]]]" value="@Model.inQuantCompra" style="border-color: #f00; font-weight: bold;">&nbsp;<input type="button" id="inContComp" name="inContComp" class="btn btn-primary mb-3" onclick="contPurchase()" value="Continuar">
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    [[[Local de retirada do Lote]]]
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(x => Model.ListingCurrent.LocalRetirada) / @Html.DisplayFor(x => Model.ListingCurrent.Location)
                                                </td>
                                            </tr>
                                            @if (Model.ListingCurrent.CategoryID == 6)
                                            {
                                                <tr>
                                                    <td>
                                                        [[[Referência (Como chegar)]]]
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => Model.ListingCurrent.ReferenciaLocalRetirada)
                                                    </td>
                                                </tr>
                                            }
                                            <tr>
                                                <td>
                                                    [[[Publicado em]]]
                                                </td>
                                                <td>
                                                    @Model.dataPublicacao
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    [[[Visualizações]]]
                                                </td>
                                                <td>
                                                    @Model.ListingCurrent.ListingStats.FirstOrDefault().CountView
                                                </td>
                                            </tr>

                                            @foreach (var item in Model.ListingCurrent.ListingMetas)
                                            {
                                                <tr>
                                                    <td>
                                                        @item.MetaField.Name
                                                    </td>
                                                    <td>
                                                        @item.Value
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>

                                    @if (Model.ListingCurrent.Latitude.HasValue && Model.ListingCurrent.Longitude.HasValue)
                                    {
                                        <div class="panel-heading bdr-t">
                                            <i class="fa fa-map-marker"></i> [[[Map]]]
                                        </div>
                                        <div class="panel-body">
                                            <div id="map-canvas"></div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <div role="tabpanel" class="tab-pane" id="contact">
                                <div class="panel panel-default bdr-t-none">
                                    @if (Model.ListingCurrent.ShowPhone && !string.IsNullOrEmpty(Model.ListingCurrent.ContactPhone))
                                    {
                                        <div class="list-group">
                                            <a data-text-swap="[[[Contact number (Click to show)]]]" data-text-original="@Model.ListingCurrent.ContactPhone" class="text-swap list-group-item "><i class="mdi-hardware-phone-iphone"></i> [[[Contact number (Click to show)]]]</a>
                                            <a href="@Url.Action("Profile", "Listing", new { id = Model.ListingCurrent.UserID })" class="list-group-item"><i class="mdi-action-view-module"></i>[[[View User's other listings]]]</a>
                                        </div>
                                    }

                                    @*<div class="panel-heading">
                                        <span>[[[Contato]]] @Model.User.FullName</span>
                                    </div>*@

                                    @*<a id="contactModal" data-toggle="modal" data-target="#contactModal"><i class="fa fa-envelope"></i>[[[Contato]]]</a>*@
                                </div>
                            </div>
                        </div>

                        @Html.Partial("~/Views/Listing/_ListingReview.cshtml", Model.ListingReviews)

                        @Html.Partial("~/Views/Listing/_ListingReviewModal.cshtml", Model)

                        <!-- Listing Hook -->
                        @Html.DoAction(HookName.Listing, Model.ListingCurrent.ID)

                        <div class="panel">
                            @if (Model.ListingCurrent.UserID == User.Identity.GetUserId() || User.IsInRole("Administrator"))
                            {
                            }
                            else
                            {
                                <fieldset>
                                    <legend>[[[Perguntas e respostas]]]</legend>
                                    <div class="form-group">
                                        <label><h4>[[[Pergunte ao Vendedor]]]</h4></label>
                                        <input type="tel" id="inAskSeller" name="inAskSeller" class="form-control input-lg" placeholder="[[[Escreva sua pergunta ao vendedor]]]" value="">
                                    </div>
                                    <div class="form-group">
                                        <input type="button" id="inSend" class="btn btn-primary mb-3" onclick="sendQuest()" value="Perguntar">
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <legend>[[[Suas perguntas]]]</legend>
                                    <div role="tabpanel" class="tab-pane active dialogs" id="dialogoslog" style="display:none;">
                                        <table class="table table-striped table-hover" id="dialogo_entre_ofertante_einteressado_logado"></table>
                                    </div>
                                </fieldset>
                            }

                            <fieldset>
                                <legend>[[[Últimas perguntas feitas]]]</legend>
                                <div role="tabpanel" class="tab-pane active" id="dialogosout">
                                    <table class="table table-striped table-hover" id="dialogo_entre_ofertante_einteressados_outros"></table>
                                </div>
                            </fieldset>
                        </div>
                    </div>

                    <div>
                        <div class="col-md-4 col-xs-12">
                            <div id="sidebar" data-spy="affix" data-offset-top="120" class="affix text-center">
                                @Html.Partial("_ListingPayment", Model.ListingCurrent)

                                <div class="panel panel-default panel-body mrg-t text-center">
                                    <a href="@Url.Action("Profile", "Listing", new { id = Model.User.Id, oqeq = @ViewBag.oqeq })">
                                        <img class="img-circle profile-picture" src="@BeYourMarket.Web.Utilities.ImageHelper.GetUserProfileImagePath(Model.User.Id)" />
                                    </a>
                                    <h5>@Model.User.FullName</h5>
                                    <p class="text-lighten">
                                        [[[Desde ]]] @Model.dataRegistroUserPubl
                                    </p>
                                    <a href="@Url.Action("Profile", "Listing", new { id = Model.User.Id, oqeq = @ViewBag.oqeq })">
                                        [[[Outros itens comercializados por este Usuário]]]<div>
                                            <span class="score @Model.User.RatingClass"></span>
                                            <span>@string.Format("[[[{0:N0} avaliações]]]", Model.ListingReviews.Count)</span>
                                        </div>
                                    </a>

                                    @*<a id="contactModal" data-toggle="modal" data-target="#contactModal" class="btn btn-default btn-block">[[[Contato]]]</a>*@
                                </div>

                                <!-- AddToAny BEGIN -->
                                <div class="a2a_kit a2a_kit_size_32 a2a_default_style">
                                    @*<span class="pull-left m-r-5"><i class="fa fa-share-alt"></i> [[[Compartilhar]]]</span>
                                    <a href="https://www.addtoany.com/share_save"></a>
                                    <a class="a2a_button_facebook"></a>
                                    <a class="a2a_button_twitter"></a>
                                    <a class="a2a_button_google_plus"></a>
                                    <a class="a2a_button_linkedin"></a>*@
                                </div>

                                <script type="text/javascript" src="//static.addtoany.com/menu/page.js"></script>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/js/timepicker/bootstrap-datepicker.js"></script>
    @Html.Partial("_LocalizationDatePicker")

    @Html.Partial("_LocalizationJQueryValidation")

    @{
        var datesDisabled = new System.Text.StringBuilder();
        foreach (var fromDate in Model.DatesBooked)
        {
            datesDisabled.AppendFormat("'{0}',", fromDate.ToShortDateString());
        }
    }

<script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker({
                startDate: new Date(),
                daysOfWeekDisabled: "0",
                datesDisabled: [@Html.Raw(datesDisabled.ToString())],
                language: '@Context.GetPrincipalAppLanguageForRequest().ToString()'
            });

            var $doc = $('html, body');
            $('.compra').click(function () {
                $doc.animate({
                    scrollTop: $($.attr(this, 'href')).offset().top
                }, 500);
                $('#inQuantCompra').focus();
                return false;
            });
        });

        function sendQuest() {
            if ($('#inAskSeller').val() != '') {
                $.ajax({
                    type: "GET",
                    url: "/Listing/RegisterChat",
                    dataType: 'json',
                    async: false,
                    cache: false,
                    data: {
                        idOf: $('#inIdOf').val(),
                        sq: $('#inAskSeller').val()
                    },
                    success: function (data) {
                        $('#inAskSeller').val('');
                        var dialogs = "";
                        $.each(data, function (index, chat) {
                            dialogs = (dialogs == "") ? "<tr><td style='text-align: left'><h5><b>" + chat.Texto_Chat + "</b></h5></td></tr>" : (dialogs + "<tr><td style='text-align: left'><h5><i class='fa fa-long-arrow-right' aria-hidden='true'></i>  " + chat.Texto_Chat + "</h5></td></tr>");
                        });
                        $('.dialogs').show();
                        $('#dialogo_entre_ofertante_einteressado_logado').empty().append(dialogs);
                    }
                });
            }
        }

        function contPurchase() {
            if ($('#inQuantCompra').val() != '') {
                if (parseFloat($('#inQuantCompra').val()) <= parseFloat($("#inQD").val())) {
                    window.location.href = "@Url.Action("Buying", "Listing", new { })" + "?idOf=" + $('#inIdOf').val() + "&qt=" + $('#inQuantCompra').val();
                }
                else {
                    swal("[[[Atenção!]]]", "Quantidade Disponível:" + $("#inQD").val() + " unidades", "error");
                }
            }
        }

        function searchChat1() {
            if ($('#inTC').val()) {
                $.ajax({
                    type: "GET",
                    url: "/Listing/LoadChatLog",
                    dataType: 'json',
                    async: false,
                    cache: false,
                    data: {
                        idOf: $('#inIdOf').val()
                    },
                    success: function (data) {
                        debugger;
                        var dialogs = "";
                        $.each(data, function (index, chat) {
                            dialogs = (dialogs == "") ? "<tr><td style='text-align: left'><h5><b>" + chat.Texto_Chat + "</b></h5></td></tr>" : (dialogs + "<tr><td style='text-align: left'><h5><i class='fa fa-long-arrow-right' aria-hidden='true'></i>  " + chat.Texto_Chat + "</h5></td></tr>");
                        });
                        $('.dialogs').show();
                        $('#dialogo_entre_ofertante_einteressado_logado').empty().append(dialogs);
                    }
                });
            }
        }

        function searchChat2() {
            debugger;
            if ($('#inTC').val()) {
                $.ajax({
                    type: "GET",
                    url: "/Listing/LoadChatOutros",
                    dataType: 'json',
                    async: false,
                    cache: false,
                    data: {
                        idOf: $('#inIdOf').val()
                    },
                    success: function (data) {
                        var dialogs = "";
                        if ($('#inToEd').val() == 'noad') {
                            $.each(data, function (index, chat) {
                                if (chat.Pergunta_Respondida)
                                    dialogs = (dialogs == "") ? "<tr><td style='text-align: left'><h5><b>" + chat.Texto_Chat + "</b></h5></td></tr>" : (dialogs + ((chat.id_Usuario_Respondeu == null) ? "<tr><td style='text-align: left'><h5><b>" + chat.Texto_Chat + "</b></h5></td></tr>" : "<tr><td style='text-align: left'><h5><i class='fa fa-long-arrow-right' aria-hidden='true'></i>  " + chat.Texto_Chat + "</h5></td></tr>"));
                            });
                        }
                        else {
                            $.each(data, function (index, chat) {
                                if (chat.Pergunta_Respondida == false) {
                                    dialogs = (dialogs == "") ? "<tr><td style='text-align: left'><h5><b>" + chat.Texto_Chat + "</b></h5></td><td></td></tr><tr><td><input type='text' id='inr_" + chat.id_ChatOferta + "' class='form-control input-lg' placeholder='[[[Responda aqui]]]' value='' style='border-color: #f00;'></td><td><a class='btn btn-success' onclick='confirmAnswer(" + chat.id_ChatOferta + ")'>[[[Salvar]]]</a></tr>"
                                        : (dialogs + "<tr><td style='text-align: left'><h5><b>" + chat.Texto_Chat + "</b></h5></td><td></td></tr><tr><td><input type='text' id='inr_" + chat.id_ChatOferta + "' class='form-control input-lg' placeholder='[[[Responda aqui]]]' value='' style='border-color: #f00;'></td><td><a class='btn btn-success' onclick='confirmAnswer(" + chat.id_ChatOferta + ")'>[[[Salvar]]]</a></td></tr>");
                                }
                                else {
                                    dialogs = (dialogs == "") ? "<tr><td style='text-align: left'><h5><b>" + chat.Texto_Chat + "</b></h5></td></tr>" : (dialogs + ((chat.id_Usuario_Respondeu == null) ? "<tr><td style='text-align: left'><h5><b>" + chat.Texto_Chat + "</b></h5></td></tr>" : "<tr><td style='text-align: left'><h5><i class='fa fa-long-arrow-right' aria-hidden='true'></i>  " + chat.Texto_Chat + "</h5></td></tr>"));
                                }
                            });
                        }
                        $('#dialogo_entre_ofertante_einteressados_outros').empty().append(dialogs);
                    }
                });
            }
        }

        function confirmAnswer(v) {
            swal({
                title: "[[[Confirma sua resposta para a pergunta do interessado?]]]",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "[[[Confirmar]]]",
                cancelButtonText: "[[[Cancelar]]]",
                closeOnConfirm: false,
                closeOnCancel: false
            }, function (isConfirm) {
                if (isConfirm) {
                    $.post('@Url.Action("AnswerQuestion", "Listing")', {
                        idOf: $('#inIdOf').val(),
                        idCO: v,
                        sq: $('#inr_' + v).val(),
                        tp: 0 })
                        .done(function (result) {
                            debugger;
                            if (result.Success) {
                                swal("[[[Respondido!]]]", result.Message, "success");
                                $('#dialogo_entre_ofertante_einteressados_outros').empty();
                                searchChat2();
                            } else {
                                swal("[[[Failed!]]]", result.Message, "error");
                            }
                    })
                    .fail(function (xhr, textStatus, errorThrown) {
                        swal("[[[Failed!]]]", xhr.responseText, "error");
                    })
                } else {
                    swal("[[[Cancelado!]]]", "", "error");
                }
            });
        }
</script>


    <!-- Include Roller JS -->
    <script src="~/js/formstone/core.js"></script>
    <script src="~/js/formstone/touch.js"></script>
    <script src="~/js/formstone/transition.js"></script>
    <script src="~/js/formstone/lightbox.js"></script>

    <script>
        searchChat1();
        searchChat2();
        $(".text-swap").on("click", function () {
            var el = $(this);
            el.text() == el.data("text-swap")
              ? el.text(el.data("text-original"))
              : el.text(el.data("text-swap"));
        });
    </script>

    <script type="text/javascript">
        $(".boxer").lightbox({
            mobile: true
        });
    </script>

    @if (Model.ListingCurrent.Latitude.HasValue && Model.ListingCurrent.Longitude.HasValue)
    {
        <text>
            <script type="text/javascript">
                function initMap() {
                    var myLatlng = new google.maps.LatLng(@Model.ListingCurrent.Latitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture), @Model.ListingCurrent.Longitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture));
                    var isDraggable = $(document).width() > 480 ? true : false; // If document (your website) is wider than 480px, isDraggable = true, else isDraggable = false

                    var mapOptions = {
                        draggable: isDraggable,
                        scrollwheel: false, // Prevent users to start zooming the map when scrolling down the page
                        zoom: 14,
                        center: myLatlng
                    };

                    var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                        content: '@Model.ListingCurrent.Location'
                    });
                }
            </script>
        </text>
    }

    <script src="https://maps.googleapis.com/maps/api/js?signed_in=true&libraries=places&callback=initMap" async defer></script>
}
